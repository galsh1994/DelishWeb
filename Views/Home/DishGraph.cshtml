
@{
    ViewData["Title"] = "DishGraph";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
 
    body {
        margin: 10px;
    }
    h2{
        text-shadow: 0 0 3px #808080
    }
</style>
<body>
    <center>
        <h2>TOP 3 Dishes</h2>

        <!-- second Chart -->
        <center>
            <div id="app">
                <div id="chart">
                    <svg id="firstSvg"></svg>
                </div>
                <div id="data">
                    <ul></ul>
                </div>
            </div>
        </center>

        <!-- Imports d3js libraries -->
        <script src="https://d3js.org/d3.v5.js"></script>
        <script src="https://d3js.org/d3-scale.v3.min.js"></script>
        <script src="https://d3js.org/d3-axis.v1.min.js"></script>

        <!-- First chart script -->
        <script type="text/javascript">
    var DATA = [
        { id: 'd4', pop: '@ViewBag.graphDishPOP1', chefName: '@ViewBag.graphDishName1'},
        { id: 'd5', pop: '@ViewBag.graphDishPOP2', chefName: '@ViewBag.graphDishName2'},
        { id: 'd6', pop: '@ViewBag.graphDishPOP3', chefName: '@ViewBag.graphDishName3'}];


    var margins = { top: 20, bottom: 10 };
    var chartWidth = 500, chartHegiht = 100 - margins.top - margins.bottom;
    var xScale = d3.scaleBand().domain(DATA.map((dataPoint) => dataPoint.chefName)).rangeRound([0, chartWidth]).padding(0.2);
    var yScale = d3.scaleLinear().domain([0, d3.max(DATA, data => data.pop) + 1]).range([chartHegiht, 0]);
    var selectedData = DATA;
    var chartContainer = d3.select('#firstSvg')
        .attr('width', chartWidth)
        .attr('color', 'brown')
        .attr('height', chartHegiht + margins.top + margins.bottom)
         .append('g');
    var chart = chartContainer;
    // Create the bars
    function renderChart() {
        chart
            .selectAll('.bar')
            .data(selectedData, data => data.id)
            .enter()
            .append('rect')
            .classed('bar', true)
            .attr('width', xScale.bandwidth())
            .attr('height', data => chartHegiht - yScale(data.pop))
            .style("fill", "darksalmon")
            .attr('x', data => xScale(data.chefName))
            .attr('y', data => yScale(data.pop));

        chart
            .selectAll('.bar')
            .attr('color', 'brown')
            .data(selectedData, data => data.id)
            .exit()
            .remove();
        // Add Text
        chart
            .selectAll('.label')
            .data(selectedData, data => data.id)
            .enter()
            .append('text')
            .text(data => data.pop)
            .attr('x', data => xScale(data.chefName) + xScale.bandwidth() / 2)
            .attr('y', data => yScale(data.pop) - 10)
            .attr('color', 'brown')
            .attr('text-anchor', 'middle')
            .classed('label', true);
        chart
            .selectAll('.label')
            .data(selectedData, data => data.id)
            .attr('color', 'brown')
            .exit()
            .remove();
    }
    renderChart();
    // Add x line
    chart
        .append('g')
        .call(d3.axisBottom(xScale))
        .attr('transform', `translate(0,${chartHegiht + 5})`)
        .attr('color', 'brown');
    var unselected = [];

        </script>
        <button style="width:250px; background-color:darksalmon; color:white" onclick="window.location.href= '@Url.Action("Index", "Home")';">back to Home Page</button>
    </center>
</body>


